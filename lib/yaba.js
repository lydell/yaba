// Generated by CoffeeScript 1.6.3
/*
Copyright 2013 Simon Lydell

This file is part of yaba.

yaba is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser
General Public License as published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

yaba is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the
implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General
Public License for more details.

You should have received a copy of the GNU Lesser General Public License along with yaba. If not,
see <http://www.gnu.org/licenses/>.
*/

var clean, getExpression, parseStack, yaba;

parseStack = require("parse-stack");

getExpression = require("./getExpression");

yaba = function(value) {
  var assertionError, error, expression, message, stack;
  yaba.runs += 1;
  if (value) {
    clean();
    return;
  }
  try {
    throw new Error;
  } catch (_error) {
    error = _error;
  }
  try {
    stack = parseStack(error);
    if (stack) {
      expression = getExpression(stack[1]);
    }
  } catch (_error) {
    error = _error;
    if (typeof console !== "undefined" && console !== null) {
      console.log("yaba: " + error);
    }
  }
  message = expression || ("Assertion " + yaba.runs + " failed");
  if (yaba.message) {
    message += " -- " + yaba.message;
  }
  assertionError = new Error(message);
  assertionError.yaba = yaba.error;
  assertionError.actual = yaba.actual;
  assertionError.expected = yaba.expected;
  assertionError.showDiff = true;
  clean();
  throw assertionError;
};

yaba.runs = 0;

yaba.error = {};

clean = function() {
  return yaba.actual = yaba.expected = yaba.message = void 0;
};

module.exports = yaba;
